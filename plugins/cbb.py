#
# Copyright (C) 2025 by Codeflix-Bots@Github, < https://github.com/Codeflix-Bots >.
#
# This file is part of < https://github.com/Codeflix-Bots/FileStore > project,
# and is released under the MIT License.
# Please see < https://github.com/Codeflix-Bots/FileStore/blob/master/LICENSE >
#
# All rights reserved.

from pyrogram import Client 
from bot import Bot
from config import *
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from database.database import *

@Bot.on_callback_query()
async def cb_handler(client: Bot, query: CallbackQuery):
    data = query.data

    if data == "help":
        await query.message.edit_text(
            text=HELP_TXT.format(first=query.from_user.first_name),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton(' ú·¥è·¥ç·¥á', callback_data='start'),
                 InlineKeyboardButton("·¥Ñ ü·¥èÍú±·¥á", callback_data='close')]
            ])
        )

    elif data == "about":
        await query.message.edit_text(
            text=ABOUT_TXT.format(first=query.from_user.first_name),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton(' ú·¥è·¥ç·¥á', callback_data='start'),
                 InlineKeyboardButton('·¥Ñ ü·¥èÍú±·¥á', callback_data='close')]
            ])
        )

    elif data == "start":
        await query.message.edit_text(
            text=START_MSG.format(first=query.from_user.first_name),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton(" ú·¥á ü·¥ò", callback_data='help'),
                 InlineKeyboardButton("·¥Ä ô·¥è·¥ú·¥õ", callback_data='about')]
            ])
        )


# Don't Remove Credit @CodeFlix_Bots, @rohit_1888
# Ask Doubt on telegram @CodeflixSupport
#
# Copyright (C) 2025 by Codeflix-Bots@Github, < https://github.com/Codeflix-Bots >.
#
# This file is part of < https://github.com/Codeflix-Bots/FileStore > project,
# and is released under the MIT License.
# Please see < https://github.com/Codeflix-Bots/FileStore/blob/master/LICENSE >
#
# All rights reserved.
#


    elif data == "premium":
        await query.message.delete()
        await client.send_photo(
            chat_id=query.message.chat.id,
            photo=QR_PIC,
            caption=(
                f"üëã {query.from_user.username}\n\n"
                f"üéñÔ∏è Available Plans :\n\n"
                f"‚óè {PRICE1}  For 0 Days Prime Membership\n\n"
                f"‚óè {PRICE2}  For 1 Month Prime Membership\n\n"
                f"‚óè {PRICE3}  For 3 Months Prime Membership\n\n"
                f"‚óè {PRICE4}  For 6 Months Prime Membership\n\n"
                f"‚óè {PRICE5}  For 1 Year Prime Membership\n\n\n"
                f"üíµ ·¥ÄÍú±·¥ã ·¥ú·¥ò…™ …™·¥Ö ·¥õ·¥è ·¥Ä·¥Ö·¥ç…™…¥ ·¥Ä…¥·¥Ö ·¥ò·¥Ä è ·¥õ ú·¥á Ä·¥á -  <code>{UPI_ID}</code>\n\n\n"
                f"‚ôªÔ∏è ·¥ò·¥Ä è·¥ç·¥á…¥·¥õ  è·¥è·¥ú ·¥°…™ ü ü …¢·¥á·¥õ …™…¥Íú±·¥õ·¥Ä…¥·¥õ ·¥ç·¥á·¥ç ô·¥á ÄÍú± ú…™·¥ò \n\n\n"
                f"‚ÄºÔ∏è ·¥ç·¥úÍú±·¥õ Íú±·¥á…¥·¥Ö Íú±·¥Ñ Ä·¥á·¥á…¥Íú± ú·¥è·¥õ ·¥ÄÍú∞·¥õ·¥á Ä ·¥ò·¥Ä è·¥ç·¥á…¥·¥õ & …™Íú∞ ·¥Ä…¥ è·¥è…¥·¥á ·¥°·¥Ä…¥·¥õ ·¥Ñ·¥úÍú±·¥õ·¥è·¥ç ·¥õ…™·¥ç·¥á ·¥ç·¥á·¥ç ô ÄÍú± ú…™·¥ò ·¥õ ú·¥á…¥ ·¥ÄÍú±·¥ã ·¥Ä·¥Ö·¥ç…™…¥"
            ),
            reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(
                            "ADMIN 24/7", url=(SCREENSHOT_URL)
                        )
                    ],
                    [InlineKeyboardButton("üîí Close", callback_data="close")],
                ]
            )
        )



    elif data == "close":
        await query.message.delete()
        try:
            await query.message.reply_to_message.delete()
        except:
            pass

    elif data.startswith("rfs_ch_"):
        cid = int(data.split("_")[2])
        try:
            chat = await client.get_chat(cid)
            mode = await db.get_channel_mode(cid)
            status = "üü¢ ·¥è…¥" if mode == "on" else "üî¥ ·¥è“ì“ì"
            new_mode = "·¥è“ì“ì" if mode == "on" else "on"
            buttons = [
                [InlineKeyboardButton(f" Ä·¥á«´ ·¥ç·¥è·¥Ö·¥á {'OFF' if mode == 'on' else 'ON'}", callback_data=f"rfs_toggle_{cid}_{new_mode}")],
                [InlineKeyboardButton("‚Äπ  ô·¥Ä·¥Ñ·¥ã", callback_data="fsub_back")]
            ]
            await query.message.edit_text(
                f"Channel: {chat.title}\nCurrent Force-Sub Mode: {status}",
                reply_markup=InlineKeyboardMarkup(buttons)
            )
        except Exception:
            await query.answer("Íú∞·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è Íú∞·¥á·¥õ·¥Ñ ú ·¥Ñ ú·¥Ä…¥…¥·¥á ü …™…¥Íú∞·¥è", show_alert=True)

    elif data.startswith("rfs_toggle_"):
        cid, action = data.split("_")[2:]
        cid = int(cid)
        mode = "on" if action == "on" else "off"

        await db.set_channel_mode(cid, mode)
        await query.answer(f"Íú∞·¥è Ä·¥Ñ·¥á-Íú±·¥ú ô Íú±·¥á·¥õ ·¥õ·¥è {'ON' if mode == 'on' else 'OFF'}")

        # Refresh the same channel's mode view
        chat = await client.get_chat(cid)
        status = "üü¢ ON" if mode == "on" else "üî¥ OFF"
        new_mode = "off" if mode == "on" else "on"
        buttons = [
            [InlineKeyboardButton(f" Ä·¥á«´ ·¥ç·¥è·¥Ö·¥á {'OFF' if mode == 'on' else 'ON'}", callback_data=f"rfs_toggle_{cid}_{new_mode}")],
            [InlineKeyboardButton("‚Äπ  ô·¥Ä·¥Ñ·¥ã", callback_data="fsub_back")]
        ]
        await query.message.edit_text(
            f"·¥Ñ ú·¥Ä…¥…¥·¥á ü: {chat.title}\n·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ Íú∞·¥è Ä·¥Ñ·¥á-Íú±·¥ú ô ·¥ç·¥è·¥Ö·¥á: {status}",
            reply_markup=InlineKeyboardMarkup(buttons)
        )

    elif data == "fsub_back":
        channels = await db.show_channels()
        buttons = []
        for cid in channels:
            try:
                chat = await client.get_chat(cid)
                mode = await db.get_channel_mode(cid)
                status = "üü¢" if mode == "on" else "üî¥"
                buttons.append([InlineKeyboardButton(f"{status} {chat.title}", callback_data=f"rfs_ch_{cid}")])
            except:
                continue

        await query.message.edit_text(
            "s·¥á ü·¥á·¥Ñ·¥õ ·¥Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥õ·¥è ·¥õ·¥è…¢…¢ ü·¥á …™·¥õs “ì·¥è Ä·¥Ñ·¥á-s·¥ú ô ·¥ç·¥è·¥Ö·¥á:",
            reply_markup=InlineKeyboardMarkup(buttons)
        )


# Don't Remove Credit @CodeFlix_Bots, @rohit_1888
# Ask Doubt on telegram @CodeflixSupport
#
# Copyright (C) 2025 by Codeflix-Bots@Github, < https://github.com/Codeflix-Bots >.
#
# This file is part of < https://github.com/Codeflix-Bots/FileStore > project,
# and is released under the MIT License.
# Please see < https://github.com/Codeflix-Bots/FileStore/blob/master/LICENSE >
#
# All rights reserved.
#
